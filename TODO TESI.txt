https://unipd.zoom.us/j/6314983243

X Cambia parametri funzioni util -> togli instance -> specifici
X Sostituisci condizioni possibili con gli assert compatibili
X Aggiusta comportamento bufind circolare per includere anche stampa per cambiamenti di objval e #rounded
X Update incrementale del numero di variabili rounded
X Implementa test automatico di una cartella intera
X Update incrementale della solution fractionality
X Update incrementale dei valori dei singletons slack (dovrebbe bastare sommare i delta_ss)
X Debug e test su tutta la miplib2003 (no ranged constraints)
X Calcolare e stampare la statistica #esecuzioni del ciclo esterno (passate di quello interno)
X All'inizio ordinare i singleton per loro coefficiente nella funzione obiettivo
X Controllare che i valori finali di objval e solfrac corrispondano a quelli calcolati direttamente sulla soluzione finale
X Scrivere pseudocodice di ZI-Round mia versione + spiegazione a parole mie il più chiara e completa possibile, chiarendo i criteri di arrotondamento e dove vengono usati
X Controllare che dopo aver ordinato i singletons i loro bounds corrispondano (dovrebbero per merito del singleton_index)
X Cambiare l'estensione verso un default attiva e con flag opzionale settare "disattiva uso dei singletons"
X Aggiungere l'ultima combinazione di plot (solcost + vars to round)
X Mettere come opzionale l'estensione che shifta le variabili intere di 1.0 migliorando objval
X Nel codice, aggiustare la misurazione del tempo di esecuzione dell'algoritmo ZI-Round in se e separatamente della risoluzione del LP (stabilendo una deviazione standard di errore sui millisecondi misurati). -> errore 14 millisecondi
X Rifare il test per std misurazione tempi ripetendo 1000 volte la risoluzione della stessa istanza campione arbitraria (es. fast0507) -> errore 14 millisecondi
X Impostare il timelimit di default a 5/10 minuti (necessario per risolvere gli lp)
X Aggiungere il supporto nel codice e stampa dei dati con aggiunta di (seed) dopo nome istanza
X [IMPORTANTE] Escludere dalle 3 miplib le istanze con vincoli RANGED (X) e quelle con variabili SEMIINT/SEMICONT (X)
X Script R: preparare la stampa delle misure aggregate sul test-bed (usa miplib2003 per debug)
X Scegliere 3/5 semi random per espandere il test-bed ulteriormente --> random seeds: 0 , 1206151 , 37029
X Aggiungi flag per attivare/disattivare ordinamento dei singleton
X Aggiungi flag per usare 1OPT solo dopo che la fractionality è stata azzerata
X Aggiungi flag per scegliere il numero massimo di round (esecuzioni del ciclo esterno)
X Refactor: aggiungi buffer circolare per stampa del round number
X Nel codice, aggiungere l'opzione settabile di attivare lo shifting di 1 delle variabili già rounded dopo che la fractionality della soluzione raggiunge zero
X Nel codice, aggiungere i'opzione di scegliere quante passate delle variabili fare (da 1 in su): raggiunto il limite uscire dal ciclo esterno e ritornare la soluzione corrente
X Preparare il test-bed: RIMUOVERE le istanze con vincoli RANGED e quelle INFEASIBLE e quelle UNBOUNDED (per quelle per cui una soluzione ottima non è consciuta ("unkn") vedi mail salvagnin -> gap 0% o 100%)
X [IMPORTANTE] Modifica ZI-Round: aggiungi flag per ties sulle variabili FRAZIONARIE risolti CONTRO la funzione obiettivo (contrario di come è)
X Crea elenchi istanze usate delle tre miplib separatamente
X Merge delle tre miplib nel test-bed finale
X Crea elenco instanze del test-bed finale
X Preparare il testbed: MIPLIB 2003 + 2010 + 2017 (senza duplicati)
X Una volta creato il test-bed definitivo, creare un file di testo con l'elenco delle istanze usate
X Discutere della scelta degli shift per le SGM
X [IMPORTANTE] Indaga su presunto bug su slack negativo vincolo <= per istanza splan1.mps -> slack errati in lettura dopo lp (read_row_slacks)
X Indaga sulle istanze "strange":
   different objval: ns2017839 (RISOLTO)
   small constraint violation: ofi (RISOLTO)
   violated constraint after lp: neos-...-moppy (RIMOSSA)
X Fai test di debug sulla variante default
X Misure aggregate + ultimo test con seed 0
X Indaga su istanze strange (vedi check_opt_values) - TOLTE
X Fai test Release su PRESOLVED testbed con seed 0 sulle altre 4 varianti + segna istanze strange
X Fai test Release seed 0 sulle 5 varianti: default, noshift, after0frac, sortsingletons, worseobj
X Converti il test-bed nella sua versione presolved (batch scripts)
X Fare i test sul test-bed definitivo

?? Grafici solfrac e solcost delle 5 varianti su fast0507 e seymour sovrapposte (5 solfrac sovrapposte e 5 solcost sovrapposti)
?? Inserire solo tabelle con dati misure aggregate (stile booktabs)
?? Aggiungere descrizione estensione proposta (sortsinglet + after0frac + fractieworstobj) + relativi grafici come per le altre
?? Tenere un solo grafico con solfrac sovrapposta a solcost per far vedere il comportamento delle due quantità
?? Scrivere sezione risultati sperimentali con tabelle + commenti sui risultati